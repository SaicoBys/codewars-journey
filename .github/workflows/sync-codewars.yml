name: 🥋 Sync Codewars Progress

on:
  schedule:
    - cron: '0 8 * * *'  # Daily at 8 AM UTC
  workflow_dispatch:
    description: 'Manually sync latest Codewars solutions'

jobs:
  sync-codewars:
    runs-on: ubuntu-latest

    steps:
    - name: 🔄 Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: 🔄 Sync from Codewars
      id: sync
      run: |
        echo "Starting Codewars sync..."
        python sync_codewars.py 2>&1 | tee sync_output.txt

        # Check if new files were created
        if grep -q "new kata files created!" sync_output.txt; then
          echo "new_files=true" >> $GITHUB_OUTPUT
        else
          echo "new_files=false" >> $GITHUB_OUTPUT
        fi

    - name: 📝 Check for changes
      id: verify-changes
      run: |
        git add -A
        if [ -n "$(git status --porcelain)" ]; then
          echo "changes=true" >> $GITHUB_OUTPUT
        else
          echo "changes=false" >> $GITHUB_OUTPUT
        fi

    - name: 🚀 Commit and push changes
      if: steps.verify-changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Codewars Auto-Sync"

        # Count new kata files
        NEW_FILES=$(git diff --cached --name-only | grep -E '\.py$' | wc -l)
        UPDATED_README=$(git diff --cached --name-only | grep -E 'README\.md$' | wc -l)

        # Create meaningful commit message
        if [ "$NEW_FILES" -gt 0 ]; then
          git commit -m "🥋 Auto-sync: ${NEW_FILES} new kata(s) from Codewars

📊 Daily progress update
📅 $(date -u '+%Y-%m-%d %H:%M UTC')

🤖 Generated with Codewars Auto-Sync"
        else
          git commit -m "📊 Auto-update: README stats refresh

🤖 Generated with Codewars Auto-Sync"
        fi

        # Push with retry logic (handle concurrent pushes)
        for i in {1..3}; do
          if git push; then
            echo "✅ Push successful on attempt $i"
            break
          else
            echo "⚠️ Push failed on attempt $i, pulling latest changes..."
            git pull --rebase origin main
          fi

          if [ $i -eq 3 ]; then
            echo "❌ Failed to push after 3 attempts"
            exit 1
          fi
        done

    - name: 📋 Display sync summary
      run: |
        echo "🎉 Codewars Auto-Sync Complete!"
        echo ""
        echo "📊 Summary:"
        if [ -f sync_output.txt ]; then
          cat sync_output.txt | grep -E "(Total|Found|Created|complete)" || echo "Sync completed successfully"
        fi