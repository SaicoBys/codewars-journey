name: 🥋 Sync Codewars Progress

on:
  schedule:
    - cron: '0 14 * * *'  # Daily at 8 AM Chicago time (2 PM UTC)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  sync-codewars:
    runs-on: ubuntu-latest

    steps:
    - name: 🔄 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: 🔄 Sync from Codewars
      run: |
        echo "Starting Codewars sync..."
        python sync_codewars.py

    - name: 📝 Check for changes
      id: verify-changes
      run: |
        git add -A
        if [ -n "$(git status --porcelain)" ]; then
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "✅ Changes detected"
        else
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "ℹ️ No changes to commit"
        fi

    - name: 🚀 Commit and push changes
      if: steps.verify-changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Codewars Auto-Sync"

        # Count new kata files
        NEW_FILES=$(git diff --cached --name-only | grep -E '\.py$' | wc -l | tr -d ' ')

        # Create commit message
        if [ "$NEW_FILES" -gt 0 ]; then
          git commit -m "🥋 Auto-sync: ${NEW_FILES} new kata(s) from Codewars

📊 Daily progress update
📅 $(date -u '+%Y-%m-%d %H:%M UTC')

🤖 Generated with Codewars Auto-Sync"
        else
          git commit -m "📊 Auto-update: README stats refresh

🤖 Generated with Codewars Auto-Sync"
        fi

        # Push with retry logic
        MAX_RETRIES=3
        RETRY_COUNT=0

        while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
          if git push origin main; then
            echo "✅ Push successful!"
            exit 0
          else
            echo "⚠️ Push failed, attempt $((RETRY_COUNT + 1))/$MAX_RETRIES"
            RETRY_COUNT=$((RETRY_COUNT + 1))

            if [ $RETRY_COUNT -lt $MAX_RETRIES ]; then
              echo "🔄 Pulling latest changes..."
              git pull --rebase origin main
              sleep 2
            fi
          fi
        done

        echo "❌ Failed to push after $MAX_RETRIES attempts"
        exit 1

    - name: 📋 Summary
      if: always()
      run: |
        echo "🎉 Workflow complete!"
        echo "Timestamp: $(date -u '+%Y-%m-%d %H:%M UTC')"
